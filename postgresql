#!/bin/bash

reset

PostgreSQLRoot=/usr/local/pgsql

if ! command -v make > /dev/null;then
    apt install make -y
fi

if ! dpkg -s build-essential > /dev/null; then
    apt install build-essential -y
fi

if ! dpkg -s libreadline-dev > /dev/null; then
    apt install libreadline-dev -y
fi

if ! dpkg -s zlib1g-dev > /dev/null; then
    apt install zlib1g-dev -y
fi

reset

compilePSQL() {
    echo "Compiling... This take a while"

    bash $PostgreSQLRoot/configure

    clear

    make all
    make install

    cd $PostgreSQLRoot/contrib

    make install
}

setupPSQL() {
    if [ -d $PostgreSQLRoot ]; then
        rm -r $PostgreSQLRoot
    fi

    echo "Wich channel want you use?"
    sleep 2
    echo "(1) Dev" 
    echo "(2) Stable" 
    read wichChannel

    clear

    case $wichChannel in
        "1")
            wget https://ftp.postgresql.org/pub/source/v15beta4/postgresql-15beta4.tar.bz2
        ;;

        "2")
            wget https://ftp.postgresql.org/pub/source/v14.5/postgresql-14.5.tar.bz2
        ;;

        *)
            echo "Not valid input"
            exit
        ;;
    esac

    clear

    bunzip2 postgresql-*.tar.bz2
    tar xvf postgresql-*.tar
    rm -r postgresql-*.tar

    mv postgresql-* $PostgreSQLRoot
    cd $PostgreSQLRoot

    rm -r .g* COPYRIGHT HISTORY INSTALL README

    clear

    compilePSQL

    clear

    cp -r $PostgreSQLRoot/contrib/*/*.sql $PostgreSQLRoot/share/extension
    cp -r $PostgreSQLRoot/contrib/*/*.control $PostgreSQLRoot/share/extension

    ln $PostgreSQLRoot/bin/psql /usr/bin/psql
}

setupData() {
    if [ -d $PostgreSQLRoot/data ]; then
        echo "Directory data already exists!"
        sleep 2
        echo "Setup new? [y/N]"
        read setup_data
        
        if [ $setup_data == "y" ]; then
            rm -r $PostgreSQLRoot/data
            mkdir $PostgreSQLRoot/data
        else
            exit
        fi
    fi

    clear

    chown postgres $PostgreSQLRoot/data
    sudo -u postgres $PostgreSQLRoot/bin/initdb -D $PostgreSQLRoot/data

    startPostgreSQL
}

startPostgreSQL() {
    if ! [ -f /tmp/.s.PGSQL.5432 ]; then
        echo "Start PostgreSQL?"
        read startPostgres

        if [ $startPostgres == "y" ]; then
            postgresql start
        fi
    fi
}

accessForRoot() {
    startPostgreSQL

    sudo -i -u postgres psql << EOF
        CREATE ROLE root SUPERUSER CREATEDB CREATEROLE LOGIN BYPASSRLS PASSWORD NULL;
        CREATE DATABASE root OWNER root;
EOF
}

if ! [ $1 ]; then
    echo "No argument specified!"
    echo "Additionally use either setup, start, restart or stop"
    exit
fi

if [ $1 == "setup" ]; then
    if id -un "root" > /dev/null; then
        if [ -d $PostgreSQLRoot ]; then
            echo "PostgreSQL is already installed!"
            echo "Setup new? [y/N]"
        else
            echo "PostgreSQL is not installed!"
            echo "Setup? [y/N]"
        fi

        read setup

        clear

        if [ $setup == "y" ]; then
            setupPSQL
            clear
            setupData
        fi
        
        clear

        echo "Setup PostgreSQL access for root? [y/N]"
        read accessForRoot

        clear

        if [ $accessForRoot == "y" ]; then
            accessForRoot
        fi

        if ! [ -f $PostgreSQLRoot/data/postmaster.pid ]; then
            startPostgreSQL
        fi
        exit
    else
        echo "You are not root!"
    fi
elif [ $1 == "status" ]; then
    lsof -i:5432
    exit
elif [ $1 == "version" ]; then
    if ! [ -d $PostgreSQLRoot ]; then
        echo "PostgreSQL is not installed!"
        sleep 2
        echo "*Run postgresql setup*"
        exit
    fi

    if ! [ -d $PostgreSQLRoot/bin ]; then
        echo "PostgreSQL is not compiled!"
        sleep 2
        echo "*Run postgresql setup* or *postgresql compile*"
        exit
    fi

    $PostgreSQLRoot/bin/postgres --version
    exit
elif [ $1 == "compile" ]; then
    if ! [ -d $PostgreSQLRoot ]; then
        echo "PostgreSQL is not installed!"
        echo "Run postgresql setup? [y/N]"
        read runPSQL_setup

        if [ $runPSQL_setup == "y" ]; then
            postgresql setup
        else
            exit
        fi
    fi

    if [ -d $PostgreSQLRoot/bin ]; then
        echo "PostgreSQL is already compiled!"
        sleep 2
        echo "Recompile? [y/N]"
        read reCompile

        clear

        if [ $reCompile == "y" ]; then
            rm -r $PostgreSQLRoot/bin
            compilePSQL
        fi
    else
        echo "PostgreSQL is not compiled!"
        sleep 2
        echo "Compile? [y/N]"
        read compile

        clear

        if [ $compile == "y" ]; then
            compilePSQL
        fi
    fi
elif [ $1 == "setup-data" ]; then
    setupData
    exit
elif [ $1 == "start" ]; then
    if [ -f $PostgreSQLRoot/data/postmaster.pid ]; then
        echo "PostgreSQL is already online"
        exit
    fi
elif [ $1 == "restart" ]; then
    if ! [ -f $PostgreSQLRoot/data/postmaster.pid ]; then
        echo "PostgreSQL ist offline"
        exit
    fi
elif [ $1 == "stop" ]; then
    if ! [ -f $PostgreSQLRoot/data/postmaster.pid ]; then
        echo "PostgreSQL is already offline"
        exit
    fi
else
    echo "This command do not exists"
    exit
fi

if ([ $1 ] && ! [ $1 == "compile" ] && ! [ $1 == "setup-data" ]); then
    if id -un "root" > /dev/null; then
        if [ $1 == "--log" ]; then
            sudo -u postgres $PostgreSQLRoot/bin/pg_ctl -D $PostgreSQLRoot/data -l logfile $1      
        else
            sudo -u postgres $PostgreSQLRoot/bin/pg_ctl -D $PostgreSQLRoot/data $1
        fi
    else
        echo "You are not root!"
    fi
fi